G..='cd "$(git-root || print .)"'
'G?'=git-alias-lookup
GCa='git add $(gCl)'
GCe='git mergetool $(gCl)'
GCl='git --no-pager diff --diff-filter=U --name-only'
GCo='git checkout --ours --'
GCt='git checkout --theirs --'
GR='git remote'
GRa='git remote add'
GRl='git remote --verbose'
GRm='git remote rename'
GRp='git remote prune'
GRs='git remote show'
GRu='git remote update'
GRx='git remote rm'
GS='git submodule'
GSI='git submodule update --init --recursive'
GSa='git submodule add'
GSf='git submodule foreach'
GSi='git submodule init'
GSl='git submodule status'
GSm=git-submodule-move
GSs='git submodule sync'
GSu='git submodule foreach git pull origin master'
GSx=git-submodule-remove
Gam='git commit -am'
Gb='git branch'
GbL='git branch --all -vv'
GbM='git branch --move --force'
GbS='git show-branch --all'
GbX='git-branch-delete-interactive --force'
Gbc='git checkout -b'
Gbl='git branch -vv'
Gbm='git branch --move'
Gbs='git show-branch'
Gbx=git-branch-delete-interactive
Gc='git commit --verbose'
GcA='git commit --verbose --patch'
GcF='git commit --verbose --amend'
GcO='git checkout --patch'
GcP='git cherry-pick --no-commit'
GcR='git reset "HEAD^"'
GcS='git commit --verbose -S'
GcU='git commit --squash'
Gca='git commit --verbose --all'
Gcf='git commit --amend --reuse-message HEAD'
Gcm='git commit --message'
Gco='git checkout'
Gcp='git cherry-pick --ff'
Gcr='git revert'
Gcs='git show --pretty=format:"${_git_log_fuller_format}"'
Gcu='git commit --fixup'
Gcv='git verify-commit'
Gd='git ls-files'
Gdc='git ls-files --cached'
Gdi='git status --porcelain --short --ignored | sed -n "s/^!! //p"'
Gdk='git ls-files --killed'
Gdm='git ls-files --modified'
Gdu='git ls-files --other --exclude-standard'
Gdx='git ls-files --deleted'
Gf='git fetch'
Gfc='git clone'
Gfm='git pull'
Gfr='git pull --rebase'
Gfu='git fetch --all --prune && git merge --ff-only @\{u\}'
Gg='git grep'
GgL='git grep --files-without-match'
Ggi='git grep --ignore-case'
Ggl='git grep --files-with-matches'
Ggv='git grep --invert-match'
Ggw='git grep --word-regexp'
GiA='git add --patch'
GiD='git diff --no-ext-diff --cached --word-diff'
GiR='git reset --patch'
GiX='git rm --cached -rf'
Gia='git add'
Gid='git diff --no-ext-diff --cached'
Gih='git init && hub create -p'
Gir='git reset'
Giu='git add --update'
Gix='git rm --cached -r'
Gl='git log --topo-order --pretty=format:"${_git_log_fuller_format}"'
GlG='git log --graph --pretty=format:"${_git_log_oneline_medium_format}"'
GlO='git log --topo-order --pretty=format:"${_git_log_oneline_medium_format}"'
Glc='git shortlog --summary --numbered'
Gld='git log --topo-order --stat --patch --pretty=format:"${_git_log_fuller_format}"'
Glf='git log --topo-order --stat --patch --follow --pretty=format:"${_git_log_fuller_format}"'
Glg='git log --graph --pretty=format:"${_git_log_oneline_format}"'
Glo='git log --topo-order --pretty=format:"${_git_log_oneline_format}"'
Glr='git reflog'
Gls='git log --topo-order --stat --pretty=format:"${_git_log_fuller_format}"'
Glv='git log --topo-order --show-signature --pretty=format:"${_git_log_fuller_format}"'
Gm='git merge'
GmC='git merge --no-commit'
GmF='git merge --no-ff'
GmS='git merge -S'
Gma='git merge --abort'
Gmt='git mergetool'
Gmv='git merge --verify-signatures'
Gp='git push'
GpA='git push --all && git push --tags'
GpF='git push --force'
Gpa='git push --all'
Gpc='git push --set-upstream origin "$(git-branch-current 2> /dev/null)"'
Gpf='git push --force-with-lease'
Gpp='git pull origin "$(git-branch-current 2> /dev/null)" && git push origin "$(git-branch-current 2> /dev/null)"'
Gpt='git push --tags'
Gr='git rebase'
GrS='git rebase --exec "git commit --amend --no-edit --no-verify -S"'
Gra='git rebase --abort'
Grc='git rebase --continue'
Gri='git rebase --interactive --autosquash'
Grs='git rebase --skip'
Gs='git stash'
GsS='git stash save --patch --no-keep-index'
GsX=git-stash-clear-interactive
Gsa='git stash apply'
Gsd='git stash show --patch --stat'
Gsl='git stash list'
Gsp='git stash pop'
Gsr=git-stash-recover
Gss='git stash save --include-untracked'
Gst='git status'
Gsu='git stash show --patch | git apply --reverse'
Gsw='git stash save --include-untracked --keep-index'
Gsx='git stash drop'
Gt='git tag'
Gts='git tag --sign'
Gtv='git verify-tag'
Gtx='git tag --delete'
GwC='git clean -d --force'
GwD='git diff --no-ext-diff --word-diff'
GwM='git mv -f'
GwR='git reset --hard'
GwS='git status'
GwX='git rm -rf'
Gwc='git clean --dry-run'
Gwd='git diff --no-ext-diff'
Gwm='git mv'
Gwr='git reset --soft'
Gws='git status --short'
Gwx='git rm -r'
g=git
ga='git add'
gaa='git add --all'
gam='git am'
gama='git am --abort'
gamc='git am --continue'
gams='git am --skip'
gamscp='git am --show-current-patch'
gap='git apply'
gapa='git add --patch'
gapt='git apply --3way'
gau='git add --update'
gav='git add --verbose'
gb='git branch'
gbD='git branch -D'
gba='git branch -a'
gbd='git branch -d'
gbda='git branch --no-color --merged | command grep -vE "^(\+|\*|\s*($(git_main_branch)|development|develop|devel|dev)\s*$)" | command xargs -n 1 git branch -d'
gbl='git blame -b -w'
gbnm='git branch --no-merged'
gbr='git branch --remote'
gbs='git bisect'
gbsb='git bisect bad'
gbsg='git bisect good'
gbsr='git bisect reset'
gbss='git bisect start'
gc='git clone'
gc!='git commit -v --amend'
gca='git commit -v -a'
gca!='git commit -v -a --amend'
gcam='git commit -a -m'
gcan!='git commit -v -a --no-edit --amend'
gcans!='git commit -v -a -s --no-edit --amend'
gcb='git checkout -b'
gcd='git checkout develop'
gcf='git config --list'
gcl='git clone --recurse-submodules'
gclean='git clean -id'
gcm='git checkout $(git_main_branch)'
gcmsg='git commit -m'
gcn!='git commit -v --no-edit --amend'
gco='git checkout'
gcount='git shortlog -sn'
gcp='git cherry-pick'
gcpa='git cherry-pick --abort'
gcpc='git cherry-pick --continue'
gcs='git commit -S'
gcsm='git commit -s -m'
gd='git diff'
gdca='git diff --cached'
gdct='git describe --tags $(git rev-list --tags --max-count=1)'
gdcw='git diff --cached --word-diff'
gds='git diff --staged'
gdt='git diff-tree --no-commit-id --name-only -r'
gdw='git diff --word-diff'
gf='git fetch'
gfa='git fetch --all --prune'
gfg='git ls-files | grep'
gfo='git fetch origin'
gg='git gui citool'
gga='git gui citool --amend'
ggpull='git pull origin "$(git_current_branch)"'
ggpush='git push origin "$(git_current_branch)"'
ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
ghh='git help'
gignore='git update-index --assume-unchanged'
gignored='git ls-files -v | grep "^[[:lower:]]"'
gk='\gitk --all --branches'
gke='\gitk --all $(git log -g --pretty=%h)'
gl='git pull'
glg='git log --stat'
glgg='git log --graph'
glgga='git log --graph --decorate --all'
glgm='git log --graph --max-count=10'
glgp='git log --stat -p'
glo='git log --oneline --decorate'
glod='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'
glods='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'' --date=short'
glog='git log --oneline --decorate --graph'
gloga='git log --oneline --decorate --graph --all'
glol='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'
glola='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --all'
glols='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --stat'
glp=_git_log_prettily
glum='git pull upstream $(git_main_branch)'
gm='git merge'
gma='git merge --abort'
gmom='git merge origin/$(git_main_branch)'
gmt='git mergetool --no-prompt'
gmtvim='git mergetool --no-prompt --tool=vimdiff'
gmum='git merge upstream/$(git_main_branch)'
gp='git push'
gpd='git push --dry-run'
gpf='git push --force-with-lease'
gpf!='git push --force'
gpoat='git push origin --all && git push origin --tags'
gpom='git push origin master'
gpristine='git reset --hard && git clean -dffx'
gpsup='git push --set-upstream origin $(git_current_branch)'
gpu='git push upstream'
gpv='git push -v'
gr='git remote'
gra='git remote add'
grb='git rebase'
grba='git rebase --abort'
grbc='git rebase --continue'
grbd='git rebase develop'
grbi='git rebase -i'
grbm='git rebase $(git_main_branch)'
grbs='git rebase --skip'
grev='git revert'
grh='git reset'
grhh='git reset --hard'
grm='git rm'
grmc='git rm --cached'
grmv='git remote rename'
groh='git reset origin/$(git_current_branch) --hard'
grrm='git remote remove'
grs='git restore'
grset='git remote set-url'
grss='git restore --source'
grt='cd "$(git rev-parse --show-toplevel || echo .)"'
gru='git reset --'
grup='git remote update'
grv='git remote -v'
gsb='git status -sb'
gsd='git svn dcommit'
gsh='git show'
gsi='git submodule init'
gsps='git show --pretty=short --show-signature'
gsr='git svn rebase'
gss='git status -s'
gst='git status'
gsta='git stash push'
gstaa='git stash apply'
gstall='git stash --all'
gstc='git stash clear'
gstd='git stash drop'
gstl='git stash list'
gstp='git stash pop'
gsts='git stash show --text'
gstu='git stash --include-untracked'
gsu='git submodule update'
gsw='git switch'
gswc='git switch -c'
gtl='gtl(){ git tag --sort=-v:refname -n -l "${1}*" }; noglob gtl'
gts='git tag -s'
gtv='git tag | sort -V'
gunignore='git update-index --no-assume-unchanged'
gup='git pull --rebase'
gupa='git pull --rebase --autostash'
gupav='git pull --rebase --autostash -v'
gupv='git pull --rebase -v'
gwch='git whatchanged -p --abbrev-commit --pretty=medium'
